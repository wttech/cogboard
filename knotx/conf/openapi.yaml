openapi: "3.0.0"
info:
  version: 1.0.0
  title: Cogboard
  description: Cogboard

servers:
  - url: https://{domain}:{port}
    description: The local API server
    variables:
      domain:
        default: localhost
        description: api domain
      port:
        enum:
          - '8092'
        default: '8092'
  - url: ws://{domain}:{port}
    description: The Websocket server
    variables:
      domain:
        default: localhost
        description: websockets
      port:
        enum:
          - '$ws_port'
        default: '$ws_port'

paths:
  /api/config:
    get:
      operationId: config-get-handler
      responses:
        default:
          description: Config Get Handler
  /api/login:
    post:
      operationId: login-handler
      responses:
        default:
          description: Generate JWT Token
  /api/endpoints:
    get:
      operationId: endpoints-handler
      security:
        - cogboardAuth: []
      responses:
        default:
          description: Endpoint list
  /api/config/save:
    post:
      operationId: config-save-handler
      security:
        - cogboardAuth: []
      responses:
        default:
          description: Config Save Handler
  /api/widget/update:
    post:
      operationId: widget-update-handler
      security:
        - cogboardAuth: []
      responses:
        default:
          description: Widget Update Handler
  /api/widget/delete:
    post:
      operationId: widget-delete-handler
      security:
        - cogboardAuth: []
      responses:
        default:
          description: Widget Delete Handler
  /:
    get:
      operationId: home-page
      responses:
        default:
          description: Cogboard Home
  /board*:
    get:
      operationId: home-page-board
      responses:
        default:
          description: Cogboard Home
  /*:
    get:
      operationId: cogboard-react-app
      responses:
        default:
          description: Cogboard App Sources

components:
  securitySchemes:
    cogboardAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT