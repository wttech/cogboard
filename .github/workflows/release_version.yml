on:
  release:
    types: [published]

name: Release version

jobs:
  build:
    name: Release version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Prepare props
        id: props
        run: |
          export VERSION=$(sed -n '1s/^.*[^0-9]\([0-9]*\.[0-9]*\.[0-9]*\).*$/\1/p' gradle.properties)
          echo "::set-output name=current_version::$VERSION"
          export NEXT_VERSION=$(echo $VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "::set-output name=next_ver::$NEXT_VERSION"
      - name: Build app
        run: |
          ./gradlew --stacktrace -i -x :cogboard-app:test
      - name: Publish App to DockerHub
        if: ${{ success() }}
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: cogboard/cogboard-app
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "${{ steps.props.outputs.current_version }},latest"
          workdir: build
      - name: Publish Webapp to DockerHub
        if: ${{ success() }}
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: cogboard/cogboard-web
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "${{ steps.props.outputs.current_version }},latest"
          workdir: cogboard-webapp
      - name: Bump Version
        if: ${{ success() }}
        id: bump_version
        run: |
          sed -i "1s%version=.*%version=${{ steps.props.outputs.next_ver }}%g" gradle.properties
      - name: Commit files
        if: ${{ success() }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout master
          git pull
          git commit -m "[skip travis] Bump version" -a
      - name: Push Changes
        if: ${{ success() }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create draft release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.props.outputs.next_ver }}
          release_name: ${{ steps.props.outputs.next_ver }}
          draft: true
          prerelease: false
