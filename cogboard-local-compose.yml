version: "3.7"

networks:
  cognet:
    driver: overlay
    attachable: true

volumes:
  mongo-data:

services:
  api-mocks:
    image: rodolpheche/wiremock
    volumes:
      - "./api-mocks:/home/wiremock"
    ports:
      - "8093:8080"
    networks:
      - cognet
    command: ["--no-request-journal", "--global-response-templating"]

  ssh-server:
    image: ssh-server
    hostname: ssh-server
    networks:
      - cognet

  backend:
    image: "cogboard/cogboard-app:${COGBOARD_VERSION}"
    environment:
      - COGBOARD_VERSION=${COGBOARD_VERSION}
      - MONGO_USERNAME=${MONGO_USER:-root}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-root}
      - MONGO_HOST=mongo-logs-storage
      - MONGO_PORT=27017
    volumes:
      - "./mnt:/data"
    networks:
      - cognet
#    ports:
#      - "18092:18092"

  mongo-logs-storage:
    image: mongo:4
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-root}
      MONGO_INITDB_DATABASE: "logs"
    volumes:
      - "mongo-data:/data/db"
    networks:
      - cognet

  # mongo-logs-storage-viewer:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8099:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER:-root}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD:-root}
  #     ME_CONFIG_MONGODB_URL: "mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo-logs-storage:27017/"
  #   networks:
  #     - cognet

  frontend:
    image: "cogboard/cogboard-web:${COGBOARD_VERSION}"
    depends_on:
      - "backend"
    networks:
      - cognet
    ports:
      - "80:80"
