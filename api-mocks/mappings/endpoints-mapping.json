{
  "mappings": [
    {
      "request": {
        "method": "GET",
        "url": "/jira/rest/api/2/search/?jql=project%20%3D%20RND%20AND%20status%20%3D%20New&maxResults=0"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "jira/toDo.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/jira/rest/api/2/search/?jql=project%20%3D%20RND%20AND%20status%20in%20(%22In%20Progress%22%2C%20%22Code%20Review%22)&maxResults=0"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "jira/inProgress.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/jira/rest/api/2/search/?jql=project%20%3D%20RND%20AND%20status%20%3D%20Resolved&maxResults=0"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "jira/done.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/jenkins/ok.html"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "text/html"
        },
        "bodyFileName": "jenkins/ok.html"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/job/CogBoard/job/success/api/json?tree=lastBuild[building,description,displayName,duration,estimatedDuration,executor,fullDisplayName,id,result,timestamp,url,builtOn,actions[lastBuiltRevision[branch[name]]]]"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "jenkins/v2.46.3/success.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/job/CogBoard/job/fail/api/json?tree=lastBuild[building,description,displayName,duration,estimatedDuration,executor,fullDisplayName,id,result,timestamp,url,builtOn,actions[lastBuiltRevision[branch[name]]]]"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "jenkins/v2.46.3/fail.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/job/CogBoard/job/in-progress/api/json?tree=lastBuild[building,description,displayName,duration,estimatedDuration,executor,fullDisplayName,id,result,timestamp,url,builtOn,actions[lastBuiltRevision[branch[name]]]]"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "jenkins/v2.46.3/in-progress.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/system/sling/monitoring/mbeans/org/apache/sling/healthcheck.2.json"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "aem/v6.4.4/healthcheck.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/deploy/environment/1/results.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/deployment/successful.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/deploy/environment/2/results.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/deployment/failed.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/deploy/environment/3/results.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/deployment/in-progress.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/deploy/environment/4/results.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/deployment/replaced.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/deploy/environment/5/results.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/deployment/skipped.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/deploy/environment/6/results.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/deployment/never.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/deploy/environment/7/results.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/deployment/queued.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/deploy/environment/8/results.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/deployment/not-built.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/result/CGB-SCS.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/plan/successful.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/result/CGB-FLD.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/plan/failed.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/rest/api/latest/result/CGB-UKWN.json?max-results=1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "bamboo/v6.7.2/plan/unknown.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/service-check/post.json",
        "bodyPatterns": [
          {
            "matchesJsonPath": "$.[?(@.name == 'cogboard-automation')]"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "service-check/post.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/dashboard/1"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "text/html"
        },
        "bodyFileName": "sonarqube/ok.html"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/api/resources?resource=success&metrics=alert_status,blocker_violations,critical_violations,major_violations,minor_violations,bugs,code_smells,info_violations,vulnerabilities"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "sonarqube/v5.x/success.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/api/resources?resource=fail&metrics=alert_status,blocker_violations,critical_violations,major_violations,minor_violations,bugs,code_smells,info_violations,vulnerabilities"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "sonarqube/v5.x/fail.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/api/resources?resource=warning&metrics=alert_status,blocker_violations,critical_violations,major_violations,minor_violations,bugs,code_smells,info_violations,vulnerabilities"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "sonarqube/v5.x/warning.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/api/measures/component?component=success&metricKeys=alert_status,blocker_violations,critical_violations,major_violations,minor_violations,bugs,code_smells,info_violations,vulnerabilities"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "sonarqube/v7.x/success.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/api/measures/component?component=fail&metricKeys=alert_status,blocker_violations,critical_violations,major_violations,minor_violations,bugs,code_smells,info_violations,vulnerabilities"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "sonarqube/v7.x/fail.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/api/measures/component?component=warning&metricKeys=alert_status,blocker_violations,critical_violations,major_violations,minor_violations,bugs,code_smells,info_violations,vulnerabilities"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "sonarqube/v7.x/warning.json"
      }
    },
    {
      "request": {
        "method": "GET",
        "url": "/system/console/bundles.json"
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "aem/v6.5.2/bundleinfo.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/zabbix/api_jsonrpc.php",
        "bodyPatterns": [
          {
            "equalToJson": "{\n            \"jsonrpc\": \"2.0\",\n            \"method\": \"user.login\",\n            \"params\": {\n              \"user\": \"admin\",\n              \"password\": \"admin\"\n            },\n            \"id\": 1,\n        \"auth\": null  }"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "zabbix/auth.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/zabbix/api_jsonrpc.php",
        "bodyPatterns": [
          {
            "equalToJson": "{\n            \"jsonrpc\": \"2.0\",\n            \"method\": \"user.login\",\n            \"params\": {\n              \"user\": \"\",\n              \"password\": \"\"\n            },\n            \"id\": 1,\n        \"auth\": null  }"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "zabbix/auth_error.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/zabbix/api_jsonrpc.php",
        "bodyPatterns": [
          {
            "matchesJsonPath": "$.params.search[?(@.key_ == 'system.cpu.util[,idle]')]"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "transformers": [
          "response-template"
        ],
        "bodyFileName": "zabbix/cpu.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/zabbix/api_jsonrpc.php",
        "bodyPatterns": [
          {
            "matchesJsonPath": "$.params.search[?(@.key_ == 'system.uptime')]"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "zabbix/uptime.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/zabbix/api_jsonrpc.php",
        "bodyPatterns": [
          {
            "matchesJsonPath": "$.params.search[?(@.key_ == 'system.users.num')]"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "zabbix/users.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/zabbix/api_jsonrpc.php",
        "bodyPatterns": [
          {
            "matchesJsonPath": "$.params.search[?(@.key_ == 'system.swap.size[,used]')]"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "zabbix/swap.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/zabbix/api_jsonrpc.php",
        "bodyPatterns": [
          {
            "matchesJsonPath": "$.params.search[?(@.key_ == 'proc.num[]')]"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "zabbix/processes.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/zabbix/api_jsonrpc.php",
        "bodyPatterns": [
          {
            "matchesJsonPath": "$.params.search[?(@.key_ == 'vm.memory.size[available]')]"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "zabbix/available_memory.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/zabbix/api_jsonrpc.php",
        "bodyPatterns": [
          {
            "matchesJsonPath": "$.params.search[?(@.key_ == 'vfs.fs.size[/,used]')]"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "zabbix/disc_used.json"
      }
    },
    {
      "request": {
        "method": "POST",
        "url": "/zabbix/api_jsonrpc.php",
        "bodyPatterns": [
          {
            "matchesJsonPath": "$.params.search[?(@.key_ == 'jmx[\\\"java.lang:type=Memory\\\",\\\"HeapMemoryUsage.used\\\"]')]"
          }
        ]
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "bodyFileName": "zabbix/heap.json"
      }
    }
  ]
}
